version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: h1bconnect-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: h1bconnect
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - h1bconnect-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: h1bconnect-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - h1bconnect-network

  # Backend API
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: h1bconnect-server
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: h1bconnect
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-jwt-secret-key
      JWT_EXPIRES_IN: 7d
    ports:
      - "5000:5000"
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - h1bconnect-network
    command: npm run dev

  # Frontend
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: h1bconnect-client
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:5000/api
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - h1bconnect-network
    command: npm run dev

  # Adminer for database management (optional)
  adminer:
    image: adminer:latest
    container_name: h1bconnect-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - h1bconnect-network

volumes:
  postgres_data:
  redis_data:

networks:
  h1bconnect-network:
    driver: bridge 